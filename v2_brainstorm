- **Check for leaks** - OK
- in all send methods, can pass binary as payload (skip serialization) - YES
- Encode packets as they enter the queue, only keep binaries in the queue - OK 
- remove load_batches option - OK
- Kalm.naggle settings: heartbeat, threshold, dynamic - OK
- replace max Packets with max bytes - OK
- transactions - YES
- If serialization fails, just plop the binary ? - YES
- transmit connection events (event shim it for udp) - YES
- deterministic uuids - 


// Leaks

- Connection objects (clients) are not cleaned up when they disconnect

//
client.send(payload, {
	now: true,
	once: true,
	encoder: 'json',	// Or null if they are already encoded - this is how to properly integrate compactr!
})


client.subscribe('channel', (request, reply, metadata))

// Metadata
{
	body: { ... }	
	client: { ... }
	frame: {
		id: 0-255
		channel: 'xyz'
		payload_bytes: 123...
		payload_messages: 2
		message_index: 0
	}
}

---------------- TARGET RPM: {"raw_ipc":250157,"kalm_ipc":2512703,"raw_tcp":133579,"kalm_tcp":4810559,"raw_udp":128506,"kalm_udp":7354175}




Sending:
Server -> Client -> Queues

Receiving:
Server -> Client


// Behaviors

Send

- Put in queue
- Start queue if needed

Deprecate SendNow (profile setting)
Deprecate SendOnce (Application logic)