- on/off methods for event listener - NO
- once for channel events
- **Check for leaks** - OK
- Improve browser version where applicable (limit polyfilling) - use DISK
- in all send methods, can override settings, like encoder - ?
- Encode packets as they enter the queue, only keep binaries in the queue - OK 
- remove load_batches option - OK
- Kalm.naggle settings: heartbeat, threshold, dynamic - OK
- replace max Packets with max bytes - OK
- request_id/ transactions - NEH
- Serialize the same way Compactr2 does, not 1


//
client.send(payload, {
	now: true,
	once: true,
	encoder: 'json',	// Or null if they are already encoded - this is how to properly integrate compactr!
})


client.subscribe('channel', (request, reply, metadata))

// Metadata
{
	body: { ... }	
	client: { ... }
	frame: {
		id: 0-255
		channel: 'xyz'
		payload_bytes: 123...
		payload_messages: 2
		message_index: 0
	}
}

---------------- TARGET RPM: {"raw_ipc":250157,"kalm_ipc":2512703,"raw_tcp":133579,"kalm_tcp":4810559,"raw_udp":128506,"kalm_udp":7354175}




Sending:
Server -> Client -> Queues

Receiving:
Server -> Client


// Behaviors

Send

- Put in queue
- Start queue if needed

SendNow

- Put in queue
- Process queue now

Deprecate SendOnce (Application logic)